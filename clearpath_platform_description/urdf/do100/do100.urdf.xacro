<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:arg name="namespace" default="" />
  <xacro:arg name="is_sim" default="false" />
  <xacro:arg name="gazebo_controllers" default="$(find clearpath_control)/config/do100/control.yaml"/>

  <!-- Included URDF/Xacro Files -->
  <xacro:include filename="$(find clearpath_platform_description)/urdf/do100/wheels/wheel.urdf.xacro"/>

  <xacro:property name="PI" value="${math.pi}" />

  <!-- D0100 Platform Macro -->
  <xacro:macro name="do100" params="wheel:='defaut'">
    <!-- Variables -->
    <xacro:property name="wheelbase" value="0.570" />
    <xacro:property name="track" value="0.3708" />
    <xacro:property name="wheel_vertical_offset" value="0.035145" />

    <xacro:property name="wheel_radius" value="0.050" />
    <xacro:property name="wheel_mass" value="0.4" />
    <xacro:property name="wheel_width" value="0.050" />

    <xacro:property name="dummy_inertia" value="1e-09"/>

    <!-- Chassis -->
    <link name="base_link"></link>

    <joint name="base_link_joint" type="fixed">
      <origin xyz="0 0 0" rpy="0 0 0" />
      <parent link="base_link"/>
      <child link="chassis_link" />
    </joint>

    <link name="chassis_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://clearpath_platform_description/meshes/do100/omni_chassis.dae"/>
        </geometry>
      </visual>
      <collision>
        <origin xyz="0 0 0"/>
        <geometry>
          <mesh filename="package://clearpath_platform_description/meshes/do100/omni_chassis_collision.stl"/>
        </geometry>
      </collision>
      <inertial>
        <!-- Center of mass -->
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="14"/>
        <!-- Moments of inertia: ( chassis without wheels ) -->
        <inertia
          ixx="0.35498" ixy="0" ixz="0"
          iyy="0.7266" iyz="0"
          izz="1.0553"/>
        </inertial>
    </link>

    <!-- Wheels -->
    <xacro:do100_wheel prefix="front_left" side="-1">
      <origin xyz="${wheelbase/2} ${track/2+wheel_width/2} ${wheel_vertical_offset}" rpy="0 0 0" />
    </xacro:do100_wheel>
    <xacro:do100_wheel prefix="front_right" side="1">
      <origin xyz="${wheelbase/2} ${-track/2-wheel_width/2} ${wheel_vertical_offset}" rpy="0 0 0" />
    </xacro:do100_wheel>
    <xacro:do100_wheel prefix="rear_left" side="1">
      <origin xyz="${-wheelbase/2} ${track/2+wheel_width/2} ${wheel_vertical_offset}" rpy="0 0 0" />
    </xacro:do100_wheel>
    <xacro:do100_wheel prefix="rear_right" side="-1">
      <origin xyz="${-wheelbase/2} ${-track/2-wheel_width/2} ${wheel_vertical_offset}" rpy="0 0 0" />
    </xacro:do100_wheel>

    <gazebo>
      <plugin filename="libignition-gazebo-wheel-slip-system.so" name="ignition::gazebo::systems::WheelSlip">
        <wheel link_name="front_left_wheel_link">
          <slip_compliance_lateral>1.0</slip_compliance_lateral>
          <slip_compliance_longitudinal>1.0</slip_compliance_longitudinal>
          <wheel_normal_force>20</wheel_normal_force>
          <wheel_radius>${wheel_radius}</wheel_radius>
        </wheel>
        <wheel link_name="front_right_wheel_link">
          <slip_compliance_lateral>1.0</slip_compliance_lateral>
          <slip_compliance_longitudinal>1.0</slip_compliance_longitudinal>
          <wheel_normal_force>20</wheel_normal_force>
          <wheel_radius>${wheel_radius}</wheel_radius>
        </wheel>
        <wheel link_name="rear_left_wheel_link">
          <slip_compliance_lateral>1.0</slip_compliance_lateral>
          <slip_compliance_longitudinal>1.0</slip_compliance_longitudinal>
          <wheel_normal_force>20</wheel_normal_force>
          <wheel_radius>${wheel_radius}</wheel_radius>
        </wheel>
        <wheel link_name="rear_right_wheel_link">
          <slip_compliance_lateral>1.0</slip_compliance_lateral>
          <slip_compliance_longitudinal>1.0</slip_compliance_longitudinal>
          <wheel_normal_force>20</wheel_normal_force>
          <wheel_radius>${wheel_radius}</wheel_radius>
        </wheel>
      </plugin>
    </gazebo>

    <!-- Internal IMU -->
    <link name="imu_0_link">
      <inertial>
        <mass value="0.001"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="${dummy_inertia}" ixy="0.0" ixz="0.0" iyy="${dummy_inertia}" iyz="0.0" izz="${dummy_inertia}"/>
      </inertial>
    </link>
    <joint name="imu_joint" type="fixed">
      <parent link="chassis_link" />
      <child link="imu_0_link" />
    </joint>

    <gazebo reference="imu_0_link">
      <sensor type="imu" name="imu_0">
        <always_on>true</always_on>
        <update_rate>50</update_rate>
        <visualize>true</visualize>
        <ignition_frame_id>imu_0_link</ignition_frame_id>
      </sensor>
    </gazebo>

    <!-- Mounting Hard Points -->
    <link name="default_mount"/>
    <link name="front_2_mount"/>
    <link name="front_1_mount"/>
    <link name="front_0_mount"/>
    <link name="rear_2_mount"/>
    <link name="rear_1_mount"/>
    <link name="rear_0_mount"/>

    <joint name="default_mount_joint" type="fixed">
      <origin xyz="0 0 0.069023" rpy="0 0 0" />
      <parent link="chassis_link"/>
      <child link="default_mount" />
    </joint>
    <joint name="front_0_mount_joint" type="fixed">
      <origin xyz="0.080 0 0" rpy="0 0 0" />
      <parent link="default_mount"/>
      <child link="front_0_mount" />
    </joint>
    <joint name="front_1_mount_joint" type="fixed">
      <origin xyz="0.080 0 0" rpy="0 0 0" />
      <parent link="front_0_mount"/>
      <child link="front_1_mount" />
    </joint>
    <joint name="front_2_mount_joint" type="fixed">
      <origin xyz="0.080 0 0" rpy="0 0 0" />
      <parent link="front_1_mount"/>
      <child link="front_2_mount" />
    </joint>
    <joint name="rear_0_mount_joint" type="fixed">
      <origin xyz="-0.080 0 0" rpy="0 0 0" />
      <parent link="default_mount"/>
      <child link="rear_0_mount" />
    </joint>
    <joint name="rear_1_mount_joint" type="fixed">
      <origin xyz="-0.080 0 0" rpy="0 0 0" />
      <parent link="rear_0_mount"/>
      <child link="rear_1_mount" />
    </joint>
    <joint name="rear_2_mount_joint" type="fixed">
      <origin xyz="-0.080 0 0" rpy="0 0 0" />
      <parent link="rear_1_mount"/>
      <child link="rear_2_mount" />
    </joint>

    <!-- Bumper Mounts -->
    <link name="front_bumper_mount"/>
    <link name="rear_bumper_mount"/>
    <joint name="front_bumper_mount_joint" type="fixed">
      <origin xyz="0.34159 0 0.0345115" rpy="0 0 0" />
      <parent link="chassis_link"/>
      <child link="front_bumper_mount" />
    </joint>
    <joint name="rear_bumper_mount_joint" type="fixed">
      <origin xyz="-0.34159 0 0.0345115" rpy="0 0 0" />
      <parent link="chassis_link"/>
      <child link="rear_bumper_mount" />
    </joint>

    <!-- Gazebo Controller -->
    <xacro:include filename="$(find clearpath_platform_description)/urdf/generic/gazebo.urdf.xacro"/>

    <!-- ROS2 controls -->
    <ros2_control name="do100_hardware" type="system">
      <hardware>
        <xacro:if value="$(arg is_sim)">
          <plugin>gz_ros2_control/IgnitionSystem</plugin>
        </xacro:if>
        <xacro:unless value="$(arg is_sim)">
          <plugin>clearpath_platform/PumaHardware</plugin>
        </xacro:unless>
      </hardware>
      <joint name="front_left_wheel_joint">
        <command_interface name="velocity"/>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
      </joint>
      <joint name="front_right_wheel_joint">
        <command_interface name="velocity"/>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
      </joint>
      <joint name="rear_left_wheel_joint">
        <command_interface name="velocity"/>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
      </joint>
      <joint name="rear_right_wheel_joint">
        <command_interface name="velocity"/>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
      </joint>
    </ros2_control>
  </xacro:macro>

  <!-- Joint State Publisher -->
  <plugin
    filename="ignition-gazebo-joint-state-publisher-system"
    name="ignition::gazebo::systems::JointStatePublisher"
  />
</robot>
